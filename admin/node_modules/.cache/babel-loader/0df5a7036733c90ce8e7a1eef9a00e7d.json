{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"C:\\\\Users\\\\Guillaume\\\\Code\\\\e-commerce\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ShowGuesserComponent = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _FieldGuesser = _interopRequireDefault(require(\"./FieldGuesser\"));\n\nvar _IntrospectQuery = _interopRequireDefault(require(\"./IntrospectQuery\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar displayOverrideCode = function displayOverrideCode(resourceSchema, fields) {\n  var code = 'If you want to override at least one field, paste this content in the <ShowGuesser> component of your resource:\\n\\n';\n  code += \"const \".concat(resourceSchema.title, \"Show = props => (\\n\");\n  code += \"    <ShowGuesser {...props}>\\n\";\n  fields.forEach(function (field) {\n    code += \"        <FieldGuesser source={\\\"\".concat(field.name, \"\\\"} addLabel={true} />\\n\");\n  });\n  code += \"    </ShowGuesser>\\n\";\n  code += \");\\n\";\n  code += \"\\n\";\n  code += \"And don't forget update your <ResourceGuesser> component:\\n\";\n  code += \"<ResourceGuesser name={\\\"\".concat(resourceSchema.name, \"\\\"} show={\").concat(resourceSchema.title, \"Show} />\");\n  console.info(code);\n}; // useful for testing (we don't need Query)\n\n\nvar ShowGuesserComponent = function ShowGuesserComponent(_ref) {\n  var fields = _ref.fields,\n      children = _ref.children,\n      resourceSchema = _ref.resourceSchema,\n      props = _objectWithoutProperties(_ref, [\"fields\", \"children\", \"resourceSchema\"]);\n\n  if (!children) {\n    children = fields.map(function (field) {\n      return _react.default.createElement(_FieldGuesser.default, {\n        key: field.name,\n        source: field.name,\n        addLabel: true\n      });\n    });\n    displayOverrideCode(resourceSchema, fields);\n  }\n\n  return _react.default.createElement(_reactAdmin.Show, props, _react.default.createElement(_reactAdmin.SimpleShowLayout, null, children));\n};\n\nexports.ShowGuesserComponent = ShowGuesserComponent;\n\nvar ShowGuesser = function ShowGuesser(props) {\n  return _react.default.createElement(_IntrospectQuery.default, _extends({\n    component: ShowGuesserComponent\n  }, props));\n};\n\nShowGuesser.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),\n  resource: _propTypes.default.string.isRequired\n};\nvar _default = ShowGuesser;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Guillaume/Code/e-commerce/admin/node_modules/@api-platform/admin/lib/ShowGuesser.js"],"names":["Object","defineProperty","exports","value","default","ShowGuesserComponent","_react","_interopRequireDefault","require","_propTypes","_reactAdmin","_FieldGuesser","_IntrospectQuery","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","displayOverrideCode","resourceSchema","fields","code","title","forEach","field","name","console","info","children","props","map","createElement","addLabel","Show","SimpleShowLayout","ShowGuesser","component","propTypes","oneOfType","node","func","resource","string","isRequired","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ShowGuesserComponent = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _FieldGuesser = _interopRequireDefault(require(\"./FieldGuesser\"));\n\nvar _IntrospectQuery = _interopRequireDefault(require(\"./IntrospectQuery\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst displayOverrideCode = (resourceSchema, fields) => {\n  let code = 'If you want to override at least one field, paste this content in the <ShowGuesser> component of your resource:\\n\\n';\n  code += `const ${resourceSchema.title}Show = props => (\\n`;\n  code += `    <ShowGuesser {...props}>\\n`;\n  fields.forEach(field => {\n    code += `        <FieldGuesser source={\"${field.name}\"} addLabel={true} />\\n`;\n  });\n  code += `    </ShowGuesser>\\n`;\n  code += `);\\n`;\n  code += `\\n`;\n  code += `And don't forget update your <ResourceGuesser> component:\\n`;\n  code += `<ResourceGuesser name={\"${resourceSchema.name}\"} show={${resourceSchema.title}Show} />`;\n  console.info(code);\n}; // useful for testing (we don't need Query)\n\n\nconst ShowGuesserComponent = ({\n  fields,\n  children,\n  resourceSchema,\n  ...props\n}) => {\n  if (!children) {\n    children = fields.map(field => _react.default.createElement(_FieldGuesser.default, {\n      key: field.name,\n      source: field.name,\n      addLabel: true\n    }));\n    displayOverrideCode(resourceSchema, fields);\n  }\n\n  return _react.default.createElement(_reactAdmin.Show, props, _react.default.createElement(_reactAdmin.SimpleShowLayout, null, children));\n};\n\nexports.ShowGuesserComponent = ShowGuesserComponent;\n\nconst ShowGuesser = props => _react.default.createElement(_IntrospectQuery.default, _extends({\n  component: ShowGuesserComponent\n}, props));\n\nShowGuesser.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),\n  resource: _propTypes.default.string.isRequired\n};\nvar _default = ShowGuesser;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
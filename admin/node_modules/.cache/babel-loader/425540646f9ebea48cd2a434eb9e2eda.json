{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Guillaume\\\\Code\\\\e-commerce\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Guillaume\\\\Code\\\\e-commerce\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Guillaume\\\\Code\\\\e-commerce\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _require = require('./util'),\n    callbackify = _require.callbackify,\n    normalizeDocumentLoader = _require.normalizeDocumentLoader;\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  function RequestQueue() {\n    _classCallCheck(this, RequestQueue);\n\n    this._requests = {};\n    this.add = callbackify(this.add.bind(this));\n  }\n\n  _createClass(RequestQueue, [{\n    key: \"wrapLoader\",\n    value: function wrapLoader(loader) {\n      var self = this;\n      self._loader = normalizeDocumentLoader(loader);\n      return function ()\n      /* url */\n      {\n        return self.add.apply(self, arguments);\n      };\n    }\n  }, {\n    key: \"add\",\n    value: function add(url) {\n      var self, promise;\n      return _regeneratorRuntime.async(function add$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = this;\n              promise = self._requests[url];\n\n              if (!promise) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", Promise.resolve(promise));\n\n            case 4:\n              // queue URL and load it\n              promise = self._requests[url] = self._loader(url);\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(promise);\n\n            case 8:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 9:\n              _context.prev = 9;\n              delete self._requests[url];\n              return _context.finish(9);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[5,, 9, 12]]);\n    }\n  }]);\n\n  return RequestQueue;\n}();","map":{"version":3,"sources":["C:/Users/Guillaume/Code/e-commerce/admin/node_modules/jsonld/lib/RequestQueue.js"],"names":["require","callbackify","normalizeDocumentLoader","module","exports","_requests","add","bind","loader","self","_loader","apply","arguments","url","promise","Promise","resolve"],"mappings":"AAAA;;;AAGA;;;;;;;;eAE+CA,OAAO,CAAC,QAAD,C;IAA/CC,W,YAAAA,W;IAAaC,uB,YAAAA,uB;;AAEpBC,MAAM,CAACC,OAAP;AAAA;AAAA;AACE;;;AAGA,0BAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,GAAL,GAAWL,WAAW,CAAC,KAAKK,GAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAtB;AACD;;AAPH;AAAA;AAAA,+BASaC,MATb,EASqB;AACjB,UAAMC,IAAI,GAAG,IAAb;AACAA,MAAAA,IAAI,CAACC,OAAL,GAAeR,uBAAuB,CAACM,MAAD,CAAtC;AACA,aAAO;AAAS;AAAW;AACzB,eAAOC,IAAI,CAACH,GAAL,CAASK,KAAT,CAAeF,IAAf,EAAqBG,SAArB,CAAP;AACD,OAFD;AAGD;AAfH;AAAA;AAAA,wBAiBYC,GAjBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBUJ,cAAAA,IAlBV,GAkBiB,IAlBjB;AAoBQK,cAAAA,OApBR,GAoBkBL,IAAI,CAACJ,SAAL,CAAeQ,GAAf,CApBlB;;AAAA,mBAqBOC,OArBP;AAAA;AAAA;AAAA;;AAAA,+CAuBaC,OAAO,CAACC,OAAR,CAAgBF,OAAhB,CAvBb;;AAAA;AA0BI;AACAA,cAAAA,OAAO,GAAGL,IAAI,CAACJ,SAAL,CAAeQ,GAAf,IAAsBJ,IAAI,CAACC,OAAL,CAAaG,GAAb,CAAhC;AA3BJ;AAAA;AAAA,+CA8BmBC,OA9BnB;;AAAA;AAAA;;AAAA;AAAA;AAgCM,qBAAOL,IAAI,CAACJ,SAAL,CAAeQ,GAAf,CAAP;AAhCN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {callbackify, normalizeDocumentLoader} = require('./util');\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n    this.add = callbackify(this.add.bind(this));\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = normalizeDocumentLoader(loader);\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    const self = this;\n\n    let promise = self._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = self._requests[url] = self._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete self._requests[url];\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
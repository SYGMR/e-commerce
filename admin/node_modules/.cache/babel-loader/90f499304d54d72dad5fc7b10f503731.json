{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar jsonLdMimeType = \"application/ld+json\";\n/**\n * Sends a JSON-LD request to the API.\n */\n\nfunction fetchJsonLd(url, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var response, headers, status, contentType;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fetch(url, setHeaders(options))];\n\n        case 1:\n          response = _a.sent();\n          headers = response.headers, status = response.status;\n          contentType = headers.get(\"Content-Type\");\n\n          if (204 === status) {\n            return [2\n            /*return*/\n            , Promise.resolve({\n              response: response\n            })];\n          }\n\n          if (500 <= status || !contentType || !contentType.includes(jsonLdMimeType)) {\n            return [2\n            /*return*/\n            , Promise.reject({\n              response: response\n            })];\n          }\n\n          return [2\n          /*return*/\n          , response.json().then(function (body) {\n            return {\n              response: response,\n              body: body,\n              document: body\n            };\n          })];\n      }\n    });\n  });\n}\n\nexports.default = fetchJsonLd;\n\nfunction setHeaders(options) {\n  if (!(options.headers instanceof Headers)) {\n    options.headers = new Headers(options.headers);\n  }\n\n  if (null === options.headers.get(\"Accept\")) {\n    options.headers.set(\"Accept\", jsonLdMimeType);\n  }\n\n  if (\"undefined\" !== options.body && !(typeof FormData !== \"undefined\" && options.body instanceof FormData) && null === options.headers.get(\"Content-Type\")) {\n    options.headers.set(\"Content-Type\", jsonLdMimeType);\n  }\n\n  return options;\n}","map":{"version":3,"sources":["../../src/hydra/fetchJsonLd.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAM,cAAc,GAAG,qBAAvB;AAEA;;;;AAGA,SAA8B,WAA9B,CACE,GADF,EAEE,OAFF,EAE2B;AAAzB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAyB;;;;;;;AAMR,iBAAA,CAAA;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,EAAM,UAAU,CAAC,OAAD,CAAhB,CAAX,CAAA;;;AAAX,UAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AACE,UAAA,OAAO,GAAa,QAAQ,CAArB,OAAP,EAAS,MAAM,GAAK,QAAQ,CAAb,MAAf;AACF,UAAA,WAAW,GAAG,OAAO,CAAC,GAAR,CAAY,cAAZ,CAAd;;AAEN,cAAI,QAAQ,MAAZ,EAAoB;AAClB,mBAAA,CAAA;AAAA;AAAA,cAAO,OAAO,CAAC,OAAR,CAAgB;AAAE,cAAA,QAAQ,EAAA;AAAV,aAAhB,CAAP,CAAA;AACD;;AACD,cAAI,OAAO,MAAP,IAAiB,CAAC,WAAlB,IAAiC,CAAC,WAAW,CAAC,QAAZ,CAAqB,cAArB,CAAtC,EAA4E;AAC1E,mBAAA,CAAA;AAAA;AAAA,cAAO,OAAO,CAAC,MAAR,CAAe;AAAE,cAAA,QAAQ,EAAA;AAAV,aAAf,CAAP,CAAA;AACD;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAO,QAAQ,CAAC,IAAT,GAAgB,IAAhB,CAAqB,UAAA,IAAA,EAAI;AAAI,mBAAC;AAAE,cAAA,QAAQ,EAAA,QAAV;AAAY,cAAA,IAAI,EAAA,IAAhB;AAAkB,cAAA,QAAQ,EAA3B;AAAC,aAAD;AAAoC,WAAjE,CAAP,CAAA;;;;AACD;;AApBD,OAAA,CAAA,OAAA,GAAA,WAAA;;AAsBA,SAAS,UAAT,CAAoB,OAApB,EAAwC;AACtC,MAAI,EAAE,OAAO,CAAC,OAAR,YAA2B,OAA7B,CAAJ,EAA2C;AACzC,IAAA,OAAO,CAAC,OAAR,GAAkB,IAAI,OAAJ,CAAY,OAAO,CAAC,OAApB,CAAlB;AACD;;AAED,MAAI,SAAS,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,QAApB,CAAb,EAA4C;AAC1C,IAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,QAApB,EAA8B,cAA9B;AACD;;AAED,MACE,gBAAgB,OAAO,CAAC,IAAxB,IACA,EAAE,OAAO,QAAP,KAAoB,WAApB,IAAmC,OAAO,CAAC,IAAR,YAAwB,QAA7D,CADA,IAEA,SAAS,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAApB,CAHX,EAIE;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAApB,EAAoC,cAApC;AACD;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar jsonLdMimeType = \"application/ld+json\";\n/**\n * Sends a JSON-LD request to the API.\n */\nfunction fetchJsonLd(url, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var response, headers, status, contentType;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, fetch(url, setHeaders(options))];\n                case 1:\n                    response = _a.sent();\n                    headers = response.headers, status = response.status;\n                    contentType = headers.get(\"Content-Type\");\n                    if (204 === status) {\n                        return [2 /*return*/, Promise.resolve({ response: response })];\n                    }\n                    if (500 <= status || !contentType || !contentType.includes(jsonLdMimeType)) {\n                        return [2 /*return*/, Promise.reject({ response: response })];\n                    }\n                    return [2 /*return*/, response.json().then(function (body) { return ({ response: response, body: body, document: body }); })];\n            }\n        });\n    });\n}\nexports.default = fetchJsonLd;\nfunction setHeaders(options) {\n    if (!(options.headers instanceof Headers)) {\n        options.headers = new Headers(options.headers);\n    }\n    if (null === options.headers.get(\"Accept\")) {\n        options.headers.set(\"Accept\", jsonLdMimeType);\n    }\n    if (\"undefined\" !== options.body &&\n        !(typeof FormData !== \"undefined\" && options.body instanceof FormData) &&\n        null === options.headers.get(\"Content-Type\")) {\n        options.headers.set(\"Content-Type\", jsonLdMimeType);\n    }\n    return options;\n}\n//# sourceMappingURL=fetchJsonLd.js.map"]},"metadata":{},"sourceType":"script"}
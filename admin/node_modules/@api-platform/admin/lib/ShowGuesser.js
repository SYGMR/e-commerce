"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ShowGuesserComponent = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactAdmin = require("react-admin");

var _FieldGuesser = _interopRequireDefault(require("./FieldGuesser"));

var _IntrospectQuery = _interopRequireDefault(require("./IntrospectQuery"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const displayOverrideCode = (resourceSchema, fields) => {
  let code = 'If you want to override at least one field, paste this content in the <ShowGuesser> component of your resource:\n\n';
  code += `const ${resourceSchema.title}Show = props => (\n`;
  code += `    <ShowGuesser {...props}>\n`;
  fields.forEach(field => {
    code += `        <FieldGuesser source={"${field.name}"} addLabel={true} />\n`;
  });
  code += `    </ShowGuesser>\n`;
  code += `);\n`;
  code += `\n`;
  code += `And don't forget update your <ResourceGuesser> component:\n`;
  code += `<ResourceGuesser name={"${resourceSchema.name}"} show={${resourceSchema.title}Show} />`;
  console.info(code);
}; // useful for testing (we don't need Query)


const ShowGuesserComponent = ({
  fields,
  children,
  resourceSchema,
  ...props
}) => {
  if (!children) {
    children = fields.map(field => _react.default.createElement(_FieldGuesser.default, {
      key: field.name,
      source: field.name,
      addLabel: true
    }));
    displayOverrideCode(resourceSchema, fields);
  }

  return _react.default.createElement(_reactAdmin.Show, props, _react.default.createElement(_reactAdmin.SimpleShowLayout, null, children));
};

exports.ShowGuesserComponent = ShowGuesserComponent;

const ShowGuesser = props => _react.default.createElement(_IntrospectQuery.default, _extends({
  component: ShowGuesserComponent
}, props));

ShowGuesser.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  resource: _propTypes.default.string.isRequired
};
var _default = ShowGuesser;
exports.default = _default;
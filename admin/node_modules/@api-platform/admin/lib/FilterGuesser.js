"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FilterGuesserComponent = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactAdmin = require("react-admin");

var _InputGuesser = _interopRequireDefault(require("./InputGuesser"));

var _IntrospectQuery = _interopRequireDefault(require("./IntrospectQuery"));

var _docsUtils = require("./docsUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

class FilterGuesserComponent extends _react.default.Component {
  constructor(props) {
    super(props);
    this.state = {
      filtersParameters: this.props.resourceSchema ? (0, _docsUtils.getFiltersParametersFromResourceSchema)(this.props.resourceSchema) : []
    };
  }

  componentDidMount() {
    if (!this.state.filtersParameters.length) {
      this.props.resourceSchema.getParameters().then(parameters => {
        this.setState({
          filtersParameters: (0, _docsUtils.getFiltersParametersFromResourceSchema)({ ...this.props.resourceSchema,
            parameters
          })
        });
      });
    }
  }

  render() {
    if (!this.state.filtersParameters.length) {
      return null;
    }

    const {
      resourceSchema,
      fields,
      hasShow,
      hasEdit,
      ...props
    } = this.props;
    return _react.default.createElement(_reactAdmin.Filter, props, this.state.filtersParameters.map(filter => _react.default.createElement(_InputGuesser.default, {
      key: filter.name,
      source: filter.name,
      alwaysOn: filter.isRequired
    })));
  }

}

exports.FilterGuesserComponent = FilterGuesserComponent;

const FilterGuesser = props => _react.default.createElement(_IntrospectQuery.default, _extends({
  component: FilterGuesserComponent
}, props));

var _default = FilterGuesser;
exports.default = _default;
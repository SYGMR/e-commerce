"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FieldGuesserComponent = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactAdmin = require("react-admin");

var _docsUtils = require("./docsUtils");

var _IntrospectQuery = _interopRequireDefault(require("./IntrospectQuery"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const isFieldSortable = (field, resourceSchema) => {
  return resourceSchema.parameters.filter(parameter => parameter.variable === field.name).length > 0 && resourceSchema.parameters.filter(parameter => parameter.variable === `order[${field.name}]`).length > 0;
};

const renderField = (field, props) => {
  if (null !== field.reference) {
    if (1 === field.maxCardinality) {
      return _react.default.createElement(_reactAdmin.ReferenceField, _extends({
        reference: field.reference.name
      }, props, {
        allowEmpty: true
      }), _react.default.createElement(_reactAdmin.ChipField, {
        source: (0, _docsUtils.getReferenceNameField)(field.reference)
      }));
    }

    const referenceNameField = (0, _docsUtils.getReferenceNameField)(field.reference);
    return _react.default.createElement(_reactAdmin.ReferenceArrayField, _extends({
      reference: field.reference.name
    }, props), _react.default.createElement(_reactAdmin.SingleFieldList, null, _react.default.createElement(_reactAdmin.ChipField, {
      source: referenceNameField,
      key: referenceNameField
    })));
  }

  switch (field.id) {
    case 'http://schema.org/email':
      return _react.default.createElement(_reactAdmin.EmailField, props);

    case 'http://schema.org/url':
      return _react.default.createElement(_reactAdmin.UrlField, props);

    default: // Do nothing

  }

  switch (field.range) {
    case 'http://www.w3.org/2001/XMLSchema#integer':
    case 'http://www.w3.org/2001/XMLSchema#float':
      return _react.default.createElement(_reactAdmin.NumberField, props);

    case 'http://www.w3.org/2001/XMLSchema#date':
    case 'http://www.w3.org/2001/XMLSchema#dateTime':
      return _react.default.createElement(_reactAdmin.DateField, props);

    case 'http://www.w3.org/2001/XMLSchema#boolean':
      return _react.default.createElement(_reactAdmin.BooleanField, props);

    default:
      return _react.default.createElement(_reactAdmin.TextField, props);
  }
};

const FieldGuesserComponent = ({
  fields,
  resourceSchema,
  ...props
}) => {
  const field = fields.find(f => f.name === props.source);

  if (!field) {
    console.error(`Field "${props.source}" not present inside the api description for the resource "${props.resource}"`);
    return _react.default.createElement(_react.Fragment, null);
  }

  return renderField(field, {
    sortable: isFieldSortable(field, resourceSchema),
    ...props
  });
};

exports.FieldGuesserComponent = FieldGuesserComponent;

const FieldGuesser = props => _react.default.createElement(_IntrospectQuery.default, _extends({
  component: FieldGuesserComponent,
  includeDeprecated: true
}, props));

FieldGuesser.propTypes = {
  source: _propTypes.default.string.isRequired
};
var _default = FieldGuesser;
exports.default = _default;
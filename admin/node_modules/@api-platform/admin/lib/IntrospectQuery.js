"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactAdmin = require("react-admin");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const IntrospectQuery = ({
  component: Component,
  includeDeprecated,
  ...props
}) => _react.default.createElement(_reactAdmin.Query, {
  type: "INTROSPECT",
  resource: props.ressource
}, ({
  data,
  loading,
  error
}) => {
  if (loading) {
    return _react.default.createElement(_reactAdmin.TranslationProvider, null, _react.default.createElement(_reactAdmin.Loading, null));
  }

  if (error) {
    console.error(error);
    return _react.default.createElement("div", null, "Error while reading the API schema");
  }

  if (data == null) {
    return null;
  }

  const resourceSchema = data.resources.find(r => r.name === props.resource);

  if (!resourceSchema || !resourceSchema.fields) {
    console.error(`Resource ${props.resource} not present inside api description`);
    return _react.default.createElement("div", null, "Resource $", props.resource, " not present inside api description");
  }

  const fields = includeDeprecated ? resourceSchema.fields : resourceSchema.fields.filter(({
    deprecated
  }) => !deprecated);
  return _react.default.createElement(Component, _extends({
    data: data,
    resource: props.ressource,
    resourceSchema: resourceSchema,
    fields: fields
  }, props));
});

IntrospectQuery.defaultProps = {
  includeDeprecated: false
};
IntrospectQuery.propTypes = {
  component: _propTypes.default.elementType,
  resource: _propTypes.default.string,
  includeDeprecated: _propTypes.default.bool
};
var _default = IntrospectQuery;
exports.default = _default;